apiVersion: v1
kind: ServiceAccount
metadata:
  name: myvelero-sa
  namespace: velero

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-velero-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: myvelero-sa
  namespace: velero

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-velero
  namespace: velero
  labels:
    app: myvelero
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myvelero
  template:
    metadata:
      labels:
        app: myvelero
    spec:
      serviceAccountName: myvelero-sa
      containers:
      - name: my-velero
        image: medinvention/my-velero-dashboard:1.0.7-beta
        ports:
        - containerPort: 3000
        resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 512Mi
        env:
          - name: ADMIN_USERNAME
            value: admin
          - name: ADMIN_PASSWORD
            value: admin
          - name: USE_RESTIC
            value: "1"
          - name: DEBUG
            value: "1"
          - name: LDAP_HOST
            value: ldaps://my-velero-ldap-svc.velero.svc.cluster.local:636
          - name: LDAP_SKIP_SSL
            value: "1"
          - name: LDAP_START_TLS
            value: "0"
          - name: LDAP_BIND_DN
            value: "CN=admin,OU=users,DC=mtr,DC=com"
          - name: LDAP_BIND_PASSWORD
            value: itachi
          - name: LDAP_SEARCH_BASE
            value: "OU=users,DC=mtr,DC=com"
          - name: LDAP_SEARCH_FILTER
            value: sAMAccountName
          - name: NAMESPACE_FILTERING
            value: '[{"group": "IT", "namespaces": ["ovpn","ovpn-dev","ovpn-prd"]}]'

---
apiVersion: v1
kind: Service
metadata:
  name: my-velero-svc
  namespace: velero
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    app: myvelero

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  name: my-velero-ing
  namespace: velero
  labels:
    app: myvelero
spec:
  rules:
    - host: myvelero.medinvention.dev
      http:
        paths:
          - backend:
              serviceName: my-velero-svc
              servicePort: http
            path: /
  tls:
    - hosts:
      - myvelero.medinvention.dev
      secretName: myvelero-tls